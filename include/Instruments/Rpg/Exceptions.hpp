//////////////////////////////////////////////////////////////////////////////////////////
///\file Exceptions.h
///
/// Provides a list of commonly thrown exceptions.
///
///Author: Ryan Seal
///Modified: 5/27/09
//////////////////////////////////////////////////////////////////////////////////////////
#ifndef EXCEPTIONS_H
#define EXCEPTIONS_H

#include <iostream>

namespace rpg{

//////////////////////////////////////////////////////////////////////////////////
///\brief General exception is thrown
//////////////////////////////////////////////////////////////////////////////////
class Exception {
 public:
  virtual void PrintError() { std::cerr << "General Exception thrown" << std::endl;}
};

//////////////////////////////////////////////////////////////////////////////
///\brief No FPGA devices are found
//////////////////////////////////////////////////////////////////////////////
class NoDevice: public Exception{
 public:
  virtual void PrintError() { std::cerr << "No Devices Found" << std::endl;}
};

/////////////////////////////////////////////////////////////////////////////
///\brief Communication error between host and FPGA
////////////////////////////////////////////////////////////////////////////
 class CommFailure: public Exception{
 public:
  virtual void PrintError() { std::cerr << "Communication Failure" << std::endl;}
 };

///////////////////////////////////////////////////////////////////////////
///\brief Phase Lock Loop failure
//////////////////////////////////////////////////////////////////////////
 class PLLFailure: public Exception{
 public:
  virtual void PrintError() { std::cerr << "PLL Failure" << std::endl;}
 };

/////////////////////////////////////////////////////////////////////////
///\brief Error downloading the image to the FPGA
////////////////////////////////////////////////////////////////////////
 class ConfigFailure: public Exception{
 public:
  virtual void PrintError() { std::cerr << "FPGA Configuration Failure" << std::endl;}
 };
};



#endif
